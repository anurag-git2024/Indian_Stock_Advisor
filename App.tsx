
import React, { useState, useCallback } from 'react';
import { StockAnalysis } from './types';
import { fetchStockAnalysis } from './services/geminiService';
import StockInputForm from './components/StockInputForm';
import AnalysisResult from './components/AnalysisResult';
import Loader from './components/Loader';

const App: React.FC = () => {
  const [stockSymbol, setStockSymbol] = useState<string>('');
  const [analysis, setAnalysis] = useState<StockAnalysis | null>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);

  const handleAnalysisRequest = useCallback(async (symbol: string) => {
    if (!symbol) {
      setError('Please enter a stock symbol.');
      return;
    }
    setLoading(true);
    setError(null);
    setAnalysis(null);
    setStockSymbol(symbol.toUpperCase());

    try {
      const result = await fetchStockAnalysis(symbol);
      setAnalysis(result);
    } catch (err) {
      console.error(err);
      setError('Failed to fetch stock analysis. The stock symbol might be invalid or there was an API error. Please try again.');
    } finally {
      setLoading(false);
    }
  }, []);

  return (
    <div className="min-h-screen bg-gray-900 text-gray-200 flex flex-col items-center p-4 sm:p-6 lg:p-8">
      <div className="w-full max-w-4xl mx-auto">
        <header className="text-center mb-8">
          <h1 className="text-4xl sm:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-blue-500 mb-2">
            Indian Stock Advisor AI
          </h1>
          <p className="text-gray-400">
            Enter an Indian stock symbol (e.g., RELIANCE, TCS, INFY) to get an AI-powered analysis.
          </p>
        </header>

        <main className="w-full">
          <StockInputForm onSubmit={handleAnalysisRequest} loading={loading} />

          {loading && <Loader />}
          
          {error && (
            <div className="mt-8 text-center bg-red-900/50 border border-red-700 text-red-300 px-4 py-3 rounded-lg" role="alert">
              <strong className="font-bold">Error: </strong>
              <span className="block sm:inline">{error}</span>
            </div>
          )}

          {analysis && <AnalysisResult data={analysis} />}
        </main>
        
        <footer className="text-center mt-12 text-gray-500 text-sm">
          <p>Disclaimer: The analysis provided is generated by an AI model and is for informational purposes only. It does not constitute financial advice. Always conduct your own research before making any investment decisions.</p>
        </footer>
      </div>
    </div>
  );
};

export default App;
